<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xdb="http://exist-db.org/ant">

    <!-- the properties file -->
    <property file="build.properties"/>
    <property file="version.properties"/>


    <!-- classpath with eXist jars -->
    <path id="classpath.core">
        <fileset dir="${server.dir}/lib/core">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${server.dir}/exist.jar"/>
        <pathelement path="${server.dir}/exist-optional.jar"/>
    </path>

    <!-- include exist ant tasks -->
    <typedef resource="org/exist/ant/antlib.xml" uri="http://exist-db.org/ant">
        <classpath refid="classpath.core"/>
    </typedef>

    <!-- Get the authentication credentials (and check we have properties)-->
    <target name="credentials">
        <fail unless="server.dir">No exist install directory, i.e. property 'server.dir'!</fail>
        <fail unless="xmlrpc">No exist xmlprc, i,e. property 'xmlrpc'!</fail>
        <!-- get the username and password -->
        <echo>${xmlrpc}</echo>
        <input message="Enter username:" addproperty="username"/>
        <input message="Enter password:" addproperty="password">
            <handler classname="org.apache.tools.ant.input.SecureInputHandler" />
        </input>
    </target>

        <!-- clean existing build and dist -->
    <target name="clean">
        <delete dir="build"/>
        <delete dir="dist"/>
    </target>

    <!-- build stage -->
    <target name="build" depends="clean">
        <!-- copy the app src to build -->
        <copy todir="build">
            <fileset dir="src/app">
                <exclude name="**/*.bak"/>
            </fileset>
        </copy>
        <!-- update the version number in the app -->
        <replace dir="build/" includes="**/expath-pkg.xml,**/repo.xml"
                 token="@APPVERSION@"
                 value="${build.major}.${build.minor}.${build.patch}"/>
    </target>

    <!-- create distributable app -->
    <target name="dist" depends="build">
        <copy todir="dist">
            <fileset dir="src/deploy">
                <include name="**/*.xql"/>
            </fileset>
        </copy>
        <replace dir="dist/" includes="**/deploy.xql,**/repo.xml"
                 token="@APPVERSION@"
                 value="${build.major}.${build.minor}.${build.patch}"/>
        <zip destfile="dist/mpese-app-${build.major}.${build.minor}.${build.patch}.xar" basedir="build"/>
    </target>

    <!-- Store the .xar file in the database -->
    <target name="store" depends="dist,credentials">
        <xdb:store uri="${xmlrpc}/db/xar_files"
            createcollection="true" user="admin" password="${password}">
            <fileset dir="dist"> 
                <include name="*.xar"/>
            </fileset>
        </xdb:store>
    </target>

    <!-- Remove previous the application .xar -->
    <target name="undeploy" depends="store">
        <loadfile property="xquery_undeploy" srcFile="dist/undeploy.xql"/>
        <xdb:xquery uri="${xmlrpc}/db" user="admin" password="${password}"
                    query="${xquery_undeploy}" outputproperty="undeploy_output"/>
            <echoproperties>
                <propertyset>
                    <propertyref name="undeploy_output"/>
                </propertyset>
            </echoproperties> 
    </target>

    <!-- Deploy the application .xar -->
    <target name="deploy" depends="undeploy">
        <loadfile property="xquery_deploy" srcFile="dist/deploy.xql"/>
        <xdb:xquery uri="${xmlrpc}/db" user="admin" password="${password}"
                    query="${xquery_deploy}" outputproperty="deploy_output"/>
            <echoproperties>
                <propertyset>
                    <propertyref name="deploy_output"/>
                </propertyset>
            </echoproperties> 
    </target>



</project>